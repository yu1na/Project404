네, 이해했습니다. `top.jsp` 파일에 `</body>`와 `</html>` 닫는 태그, 그리고 FullCalendar 관련 JavaScript 라이브러리 및 코드까지 **모두 포함시켜 하나의 완전한 파일**로 만들어 드리겠습니다.

이렇게 하면 다른 JSP 파일에서 `top.jsp`를 `include`하는 대신, `top.jsp` 자체를 직접 렌더링하거나, 아니면 `top.jsp`만 로드해도 FullCalendar가 동작하는지 확인할 수 있습니다.

**주의사항:**

  * 이 방식은 `calendar.jsp`나 다른 콘텐츠 JSP 파일에서 `<!DOCTYPE html>` 등의 중복 선언을 없애고, **`top.jsp`만으로 전체 페이지를 구성할 때 유용**합니다.
  * 만약 `calendar.jsp` 등에서 **별도의 고유한 JavaScript 로직이 많다면**, 해당 로직은 `top.jsp`가 아닌 **개별 JSP 파일에 유지**하는 것이 더 바람직할 수 있습니다.
  * 아래 코드는 `calendar.jsp`의 JavaScript 로직까지 `top.jsp`로 옮긴 예시입니다. 만약 `calendar.jsp`를 따로 유지하고 싶다면, JavaScript 부분은 `calendar.jsp`에 그대로 두시고 `top.jsp`에는 `<script>` CDN 로드 부분까지만 두어야 합니다.

-----

### **`top.jsp` (모든 HTML 및 JS 포함 버전)**

```jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>항공사 직원 포털</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
        <link href='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.13/main.min.css' rel='stylesheet' />
        <style>
            /* Reset some default browser styles */
            body, html {
                margin: 0;
                padding: 0;
                height: 100%; /* 전체 높이 100% 설정 */
                display: flex; /* flexbox 사용을 위해 body를 flex 컨테이너로 설정 */
                flex-direction: column; /* 자식 요소들을 수직으로 배치 */
            }

            /* Global Styles */
            .no-underline {
                text-decoration: none !important; /* 밑줄 제거 강제 적용 */
            }
            .menu-item {
                margin-right: 20px;
            }
            .portal-title {
                color: white !important;
                margin-right: 30px;
            }
            /* 네비게이션 바 스타일 */
            .navbar-custom {
                background-color: #004080;
                color: white;
                padding: 15px;
                display: flex;
                align-items: center;
                width: 100%; /* 상단 바 전체 너비 */
            }
            .navbar-custom .nav-link { /* 상단 메뉴 링크 색상 */
                color: white !important;
                margin-left: 20px; /* 메뉴 항목 간 간격 */
            }
            .navbar-custom .nav-link:hover {
                 color: #add8e6 !important;
            }

            /* 메인 컨텐츠 영역 */
            .wrapper {
                display: flex; /* 사이드바와 메인 컨텐츠를 가로로 배치 */
                flex: 1; /* 남은 공간을 모두 차지하도록 함 */
            }
            .main-content {
                flex-grow: 1; /* 남은 공간을 모두 차지 */
                padding: 20px;
            }

            /* 사이드바 스타일 */
            .sidebar-container {
                width: 200px;
                background: #e6f0ff;
                padding: 20px;
                box-sizing: border-box;
                flex-shrink: 0; /* 크기가 줄어들지 않도록 */
            }
            .sidebar-container ul {
                list-style: none;
                padding: 0;
                margin: 0;
            }
            .sidebar-container li {
                margin-bottom: 15px;
            }
            .sidebar-container li a {
                text-decoration: none;
                color: #333;
                font-size: 17px;
                display: block;
                padding: 5px 0;
            }
            .sidebar-container li a:hover {
                color: #0056b3;
            }

            /* FullCalendar 버튼 스타일 조정 */
            .fc-toolbar-title {
                font-size: 1.5em;
                color: #004080;
            }
            .fc-button {
                background-color: #0056b3 !important;
                border-color: #0056b3 !important;
                color: white !important;
            }
            .fc-button:hover {
                background-color: #004080 !important;
                border-color: #004080 !important;
            }
            .fc-today-button {
                background-color: #28a745 !important;
                border-color: #28a745 !important;
            }
            .fc-today-button:hover {
                background-color: #218838 !important;
                border-color: #218838 !important;
            }
        </style>
    </head>
    <body>
        <div class="navbar-custom">
            <a href="/" class="no-underline portal-title">
              <span style="font-size: 20px;">✈ 항공사 직원 포털</span>
            </a>
            <nav class="flex text-base font-medium" style="flex-grow: 1; justify-content: flex-end;">
              <a href="/approval/list" class="nav-link menu-item">전자결재</a>
              <a href="/report/list" class="nav-link menu-item">업무보고</a>
              <a href="/message/inbox" class="nav-link menu-item">쪽지함</a>
              <a href="/docs/list" class="nav-link menu-item">문서보관소</a>
              <a href="/qna/list" class="nav-link menu-item">고객응대</a>
              <a href="/calendar" class="nav-link menu-item">일정관리</a>
            </nav>
            <span style="float: right;">[로그아웃]</span>
        </div>

        <div class="wrapper">
            <div class="sidebar-container">
                <ul style="list-style: none; padding: 0;">
                    <li><a href="/calendar" class="no-underline">📅 일정 관리</a></li>
                    <li><a href="/report/list" class="no-underline">📝 업무보고</a></li>
                    <li><a href="/approval/list" class="no-underline">📎 전자결재</a></li>
                    <li><a href="/message/inbox" class="no-underline">💬 쪽지함</a></li>
                    <li><a href="/docs/list" class="no-underline">📁 문서보관소</a></li>
                    <li><a href="/qna/list" class="no-underline">👥 고객응대</a></li>
                </ul>
            </div>

            <div class="main-content">
                <h2>📅 일정 관리</h2>
                <div id="calendar"></div>

                <div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
                  <div class="modal-dialog">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="eventModalLabel">일정 상세/수정</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                      </div>
                      <div class="modal-body">
                        <form id="eventForm">
                          <input type="hidden" id="eventId">
                          <div class="mb-3">
                            <label for="eventTitle" class="form-label">제목</label>
                            <input type="text" class="form-control" id="eventTitle" required>
                          </div>
                          <div class="mb-3">
                            <label for="eventDescription" class="form-label">설명/비고</label>
                            <textarea class="form-control" id="eventDescription" rows="3"></textarea>
                          </div>
                          <div class="mb-3">
                            <label for="eventStart" class="form-label">시작일시</label>
                            <input type="datetime-local" class="form-control" id="eventStart" required>
                          </div>
                          <div class="mb-3">
                            <label for="eventEnd" class="form-label">종료일시</label>
                            <input type="datetime-local" class="form-control" id="eventEnd">
                          </div>
                          <div class="mb-3 form-check">
                            <input type="checkbox" class="form-check-input" id="eventAllDay">
                            <label class="form-check-label" for="eventAllDay">종일</label>
                          </div>
                          <div class="mb-3">
                            <label for="eventColor" class="form-label">색상</label>
                            <input type="color" class="form-control form-control-color" id="eventColor" value="#007bff">
                          </div>
                        </form>
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-danger me-auto" id="deleteEventBtn">삭제</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
                        <button type="button" class="btn btn-primary" id="saveEventBtn">저장</button>
                      </div>
                    </div>
                  </div>
                </div>

            </div> </div> <%-- jQuery (FullCalendar 필요) --%>
        <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
        <%-- Bootstrap 5 JS (모달 등) --%>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <%-- FullCalendar Core JS --%>
        <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.13/index.global.min.js'></script>
        <%-- FullCalendar 한국어 로케일 (옵션) --%>
        <script src='https://cdn.jsdelivr.net/npm/@fullcalendar/core/locales/ko.global.min.js'></script>
        <%-- moment.js (날짜 파싱 및 포맷팅, FullCalendar와 직접적인 의존성은 아니나 편의상 사용) --%>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.34/moment-timezone-with-data.min.js"></script>

        <script>
            document.addEventListener('DOMContentLoaded', function() {
                var calendarEl = document.getElementById('calendar');
                var eventModal = new bootstrap.Modal(document.getElementById('eventModal'));

                var calendar = new FullCalendar.Calendar(calendarEl, {
                    locale: 'ko', // 한국어 적용
                    headerToolbar: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'dayGridMonth,timeGridWeek,timeGridDay'
                    },
                    initialView: 'dayGridMonth',
                    editable: true,
                    selectable: true,
                    dayMaxEvents: true,
                    eventLimit: true,

                    // 이벤트 데이터 로드
                    events: function(fetchInfo, successCallback, failureCallback) {
                        $.ajax({
                            url: '/calendar/events', // CalendarController의 getCalendarEvents 매핑
                            method: 'GET',
                            dataType: 'json',
                            success: function(data) {
                                successCallback(data);
                            },
                            error: function(xhr, status, error) {
                                console.error("이벤트 로드 실패: ", status, error);
                                alert("이벤트 로드에 실패했습니다.");
                                failureCallback(error);
                            }
                        });
                    },

                    // 날짜 클릭 시 이벤트 추가
                    select: function(info) {
                        $('#eventId').val(''); // ID 초기화 (새 이벤트)
                        $('#eventTitle').val('');
                        $('#eventDescription').val('');
                        $('#eventStart').val(moment(info.startStr).format('YYYY-MM-DDTHH:mm'));
                        $('#eventEnd').val(moment(info.endStr).format('YYYY-MM-DDTHH:mm'));
                        $('#eventAllDay').prop('checked', info.allDay);
                        $('#eventColor').val('#007bff');
                        $('#deleteEventBtn').hide(); // 새 이벤트 추가 시 삭제 버튼 숨김

                        eventModal.show();
                    },

                    // 이벤트 클릭 시 상세/수정
                    eventClick: function(info) {
                        var event = info.event;
                        $('#eventId').val(event.id);
                        $('#eventTitle').val(event.title);
                        $('#eventDescription').val(event.extendedProps.description || '');
                        $('#eventStart').val(moment(event.start).format('YYYY-MM-DDTHH:mm'));
                        $('#eventEnd').val(event.end ? moment(event.end).format('YYYY-MM-DDTHH:mm') : '');
                        $('#eventAllDay').prop('checked', event.allDay);
                        $('#eventColor').val(event.backgroundColor || '#007bff');
                        $('#deleteEventBtn').show(); // 기존 이벤트는 삭제 버튼 보임

                        eventModal.show();
                    },

                    // 이벤트 드래그 후 날짜 변경
                    eventDrop: function(info) {
                        var event = info.event;
                        var updatedEvent = {
                            id: event.id,
                            title: event.title,
                            start: moment(event.start).format('YYYY-MM-DDTHH:mm:ss'),
                            end: event.end ? moment(event.end).format('YYYY-MM-DDTHH:mm:ss') : null,
                            allDay: event.allDay,
                            color: event.backgroundColor,
                            description: event.extendedProps.description || ''
                        };
                        updateEvent(updatedEvent, info.revert);
                    },

                    // 이벤트 리사이즈 후 기간 변경
                    eventResize: function(info) {
                        var event = info.event;
                        var updatedEvent = {
                            id: event.id,
                            title: event.title,
                            start: moment(event.start).format('YYYY-MM-DDTHH:mm:ss'),
                            end: event.end ? moment(event.end).format('YYYY-MM-DDTHH:mm:ss') : null,
                            allDay: event.allDay,
                            color: event.backgroundColor,
                            description: event.extendedProps.description || ''
                        };
                        updateEvent(updatedEvent, info.revert);
                    }
                });

                calendar.render(); // 캘린더 그리기

                // 저장 버튼 클릭 시
                $('#saveEventBtn').on('click', function() {
                    var eventId = $('#eventId').val();
                    var eventData = {
                        title: $('#eventTitle').val(),
                        description: $('#eventDescription').val(),
                        start: moment($('#eventStart').val()).format('YYYY-MM-DDTHH:mm:ss'),
                        end: $('#eventEnd').val() ? moment($('#eventEnd').val()).format('YYYY-MM-DDTHH:mm:ss') : null,
                        allDay: $('#eventAllDay').is(':checked'),
                        color: $('#eventColor').val()
                    };

                    if (eventId) { // 기존 이벤트 수정
                        updateEvent(Object.assign({id: Number(eventId)}, eventData));
                    } else { // 새 이벤트 추가
                        addEvent(eventData);
                    }
                    eventModal.hide();
                });

                // 삭제 버튼 클릭 시
                $('#deleteEventBtn').on('click', function() {
                    if (confirm('이 일정을 삭제하시겠습니까?')) {
                        var eventId = $('#eventId').val();
                        deleteEvent(Number(eventId));
                        eventModal.hide();
                    }
                });

                // --- API 연동 함수들 ---
                function addEvent(eventData) {
                    $.ajax({
                        url: '/calendar/events',
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(eventData),
                        success: function(response) {
                            calendar.addEvent(response);
                            alert('일정이 추가되었습니다.');
                        },
                        error: function(xhr, status, error) {
                            console.error("이벤트 추가 실패: ", status, error);
                            alert("일정 추가에 실패했습니다.");
                        }
                    });
                }

                function updateEvent(eventData, revertFunc) {
                    $.ajax({
                        url: '/calendar/events/' + eventData.id,
                        method: 'PUT',
                        contentType: 'application/json',
                        data: JSON.stringify(eventData),
                        success: function(response) {
                            alert('일정이 수정되었습니다.');
                        },
                        error: function(xhr, status, error) {
                            console.error("이벤트 수정 실패: ", status, error);
                            alert("일정 수정에 실패했습니다.");
                            if (revertFunc) revertFunc();
                        }
                    });
                }

                function deleteEvent(eventId) {
                    $.ajax({
                        url: '/calendar/events/' + eventId,
                        method: 'DELETE',
                        success: function() {
                            calendar.getEventById(eventId).remove();
                            alert('일정이 삭제되었습니다.');
                        },
                        error: function(xhr, status, error) {
                            console.error("이벤트 삭제 실패: ", status, error);
                            alert("일정 삭제에 실패했습니다.");
                        }
                    });
                }
            });
        </script>
    </body>
</html>
```