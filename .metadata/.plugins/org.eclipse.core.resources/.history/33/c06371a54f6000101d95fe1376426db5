package com.pj.springboot.auth;

import java.util.Optional;

import org.apache.catalina.realm.JNDIRealm.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.*;
import org.springframework.stereotype.Service;

import com.pj.springboot.model.MemberDTO;
import com.pj.springboot.repository.MemberRepository;

@Service
public class MyUserDetailsService implements UserDetailsService {

    @Autowired
    private MemberRepository memberRepository;

    @Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
        Optional<MemberDTO> memberOpt = memberRepository.findById(username);

        if (memberOpt.isEmpty()) {
            throw new UsernameNotFoundException("사용자를 찾을 수 없습니다: " + username);
        }

        MemberDTO member = memberOpt.get();

        // Spring Security에서는 roles()에 ROLE_이 없는 값만 넣어야 함
        String role = member.getRole();
        if (role.startsWith("ROLE_")) {
            role = role.substring(5); // "ROLE_USER" → "USER"
        }

        return User.builder()
                .username(member.getId())
                .password(member.getPw())
                .roles(role) // ROLE_ 없이 전달
                .build();
    	}
}
